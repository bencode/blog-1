{"project":{"name":"regularjs","version":"0.2.1","author":{"name":"leeluolee"},"description":"","license":"MIT","keywords":["template","data-binding"],"main":"lib/index.js","repository":{"type":"git","url":"https://github.com/regularjs"},"homepage":"http://regularjs.github.io","scripts":{"test":"gulp travis --phantomjs"},"bin":{"regular":"./bin/regular"},"devDependencies":{"gulp":"3.6.x","gulp-component":"~0.1.8","gulp-uglify":"~0.2.1","gulp-jshint":"~1.5.3","gulp-mocha":"~0.4.1","gulp-istanbul":"~0.1.1","gulp-util":"~2.2.14","through2":"~0.4.1","mocha":"~1.18.2","expect.js":"~0.3.1","karma":"~0.12.6","karma-mocha":"~0.1.3","karma-phantomjs-launcher":"~0.1.4","karma-coverage":"~0.2.4","karma-ie-launcher":"~0.1.5","karma-chrome-launcher":"~0.1.4","karma-firefox-launcher":"~0.1.3"}},"files":{"/home/code/regular/blog/tmp/regular/src/Regular.js":{"name":"/home/code/regular/blog/tmp/regular/src/Regular.js","modules":{"widget":1,"widget-foo":1},"classes":{"MyClass":1},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/util.js":{"name":"/home/code/regular/blog/tmp/regular/src/util.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/directive/animation.js":{"name":"/home/code/regular/blog/tmp/regular/src/directive/animation.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/directive/event.js":{"name":"/home/code/regular/blog/tmp/regular/src/directive/event.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/helper/animate.js":{"name":"/home/code/regular/blog/tmp/regular/src/helper/animate.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/helper/watcher.js":{"name":"/home/code/regular/blog/tmp/regular/src/helper/watcher.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/module/timeout.js":{"name":"/home/code/regular/blog/tmp/regular/src/module/timeout.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/parser/Lexer.js":{"name":"/home/code/regular/blog/tmp/regular/src/parser/Lexer.js","modules":{},"classes":{},"fors":{},"namespaces":{}},"/home/code/regular/blog/tmp/regular/src/parser/Parser.js":{"name":"/home/code/regular/blog/tmp/regular/src/parser/Parser.js","modules":{},"classes":{},"fors":{},"namespaces":{}}},"modules":{"widget":{"name":"widget","submodules":{"widget-foo":1},"classes":{"MyClass":1},"fors":{},"namespaces":{},"file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":25,"description":"Provides more features for the widget module...","tag":"main","itemtype":"main"},"widget-foo":{"name":"widget-foo","submodules":{},"classes":{"MyClass":1},"fors":{},"is_submodule":1,"namespaces":{},"module":"widget","namespace":"","file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":25,"description":"Provides more features for the widget module...","tag":"main","itemtype":"main"}},"classes":{"MyClass":{"name":"MyClass","shortname":"MyClass","classitems":[],"plugins":[],"extensions":[],"plugin_for":[],"extension_for":[],"module":"widget","submodule":"widget-foo","namespace":"","file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":25,"description":"This is the description for my class.\n> dadada","is_constructor":1}},"classitems":[{"file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":112,"description":"directive's setter and getter","params":[{"name":"name","description":"","type":"String|RegExp"},{"name":"cfg","description":"[description]","type":"[type]"}],"return":{"description":"[description]","type":"[type]"},"class":"MyClass","module":"widget","submodule":"widget-foo"},{"file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":214,"description":"compile a block ast ; return a group;","params":[{"name":"parsed","description":"ast","type":"Array"},{"name":"record","description":"","type":"[type]"}],"return":{"description":"","type":"[type]"},"class":"MyClass","module":"widget","submodule":"widget-foo"},{"file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":238,"description":"create two-way binding with another component;\n*warn*: \n  expr1 and expr2 must can operate set&get, for example: the 'a.b' or 'a[b + 1]' is set-able, but 'a.b + 1' is not, \n  beacuse Regular dont know how to inverse set through the expression;\n  \n  if before $bind, two component's state is not sync, the component(passed param) will sync with the called component;\n\n*example: *\n\n```javascript\n// in this example, we need to link two pager component\nvar pager = new Pager({}) // pager compoennt\nvar pager2 = new Pager({}) // another pager component\npager.$bind(pager2, 'current'); // two way bind throw two component\npager.$bind(pager2, 'total');   // \n// or just\npager.$bind(pager2, {\"current\": \"current\", \"total\": \"total\"}) \n```","params":[{"name":"component","description":"the","type":"Regular"},{"name":"expr1","description":"required, self expr1 to operate binding","type":"String|Expression"},{"name":"expr2","description":"optional, other component's expr to bind with, if not passed, the expr2 will use the expr1;","type":"String|Expression"}],"return":{"description":"this;"},"class":"MyClass","module":"widget","submodule":"widget-foo"},{"file":"/home/code/regular/blog/tmp/regular/src/Regular.js","line":280,"description":"unbind one component( see $bind also)\n\nunbind will unbind all relation between two component","params":[{"name":"component","description":"[description]","type":"Regular"}],"return":{"description":"this","type":"This"},"class":"MyClass","module":"widget","submodule":"widget-foo"},{"file":"/home/code/regular/blog/tmp/regular/src/util.js","line":193,"description":"clone","class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/directive/animation.js","line":18,"description":"Animation Plugin","params":[{"name":"Component","description":"","type":"Component"}],"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/directive/event.js","line":1,"description":"event directive  bundle","class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/directive/event.js","line":32,"description":"- $('dx').delegate()","class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/helper/animate.js","line":39,"description":"inject node with animation","params":[{"name":"node","description":"[description]","type":"[type]"},{"name":"refer","description":"[description]","type":"[type]"},{"name":"direction","description":"[description]","type":"[type]"}],"return":{"description":"[description]","type":"[type]"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/helper/animate.js","line":84,"description":"remove node with animation","params":[{"name":"node","description":"[description]","type":"[type]"},{"name":"callback","description":"[description]","type":"Function"}],"return":{"description":"[description]","type":"[type]"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/helper/animate.js","line":183,"description":"get maxtimeout","params":[{"name":"node","description":"","type":"Node"}],"return":{"description":"[description]","type":"[type]"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/helper/watcher.js","line":69,"description":"the whole digest loop ,just like angular, it just a dirty-check loop;","params":[{"name":"path","description":"now regular process a pure dirty-check loop, but in parse phase, \n                 Regular's parser extract the dependencies, in future maybe it will change to dirty-check combine with path-aware update;","type":"String"}],"return":{"description":"","type":"Void"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/helper/watcher.js","line":165,"description":"**tips**: whatever param you passed in $update, after the function called, dirty-check(digest) phase will enter;","params":[{"name":"path","description":"","type":"Function|String|Expression"},{"name":"value","description":"optional, when path is Function, the value is ignored","type":"Whatever"}],"return":{"description":"this","type":"This"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/module/timeout.js","line":3,"description":"Timeout Module","params":[{"name":"Component","description":"","type":"Component"}],"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/module/timeout.js","line":10,"description":"just like setTimeout, but will enter digest automately","params":[{"name":"fn","description":"","type":"Function"},{"name":"delay","description":"","type":"Number"}],"return":{"description":"timeoutid","type":"Number"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/module/timeout.js","line":23,"description":"just like setInterval, but will enter digest automately","params":[{"name":"fn","description":"","type":"Function"},{"name":"interval","description":"","type":"Number"}],"return":{"description":"intervalid","type":"Number"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/parser/Lexer.js","line":88,"description":"进入某种状态","params":[{"name":"state","description":"[description]","type":"[type]"}],"return":{"description":"","type":"[type]"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/parser/Lexer.js","line":99,"description":"退出","return":{"description":"","type":"[type]"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/parser/Lexer.js","line":109,"description":"退出某种状态","return":{"description":"","type":"[type]"},"class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/parser/Lexer.js","line":176,"description":"build the mode 1 and mode 2‘s tokenizer","class":"","module":"widget"},{"file":"/home/code/regular/blog/tmp/regular/src/parser/Parser.js","line":547,"class":"","module":"widget"}],"warnings":[{"message":"Missing item type\ndirective's setter and getter","line":" /home/code/regular/blog/tmp/regular/src/Regular.js:112"},{"message":"Missing item type\ncompile a block ast ; return a group;","line":" /home/code/regular/blog/tmp/regular/src/Regular.js:214"},{"message":"Missing item type\ncreate two-way binding with another component;\n*warn*: \n  expr1 and expr2 must can operate set&get, for example: the 'a.b' or 'a[b + 1]' is set-able, but 'a.b + 1' is not, \n  beacuse Regular dont know how to inverse set through the expression;\n  \n  if before $bind, two component's state is not sync, the component(passed param) will sync with the called component;\n\n*example: *\n\n```javascript\n// in this example, we need to link two pager component\nvar pager = new Pager({}) // pager compoennt\nvar pager2 = new Pager({}) // another pager component\npager.$bind(pager2, 'current'); // two way bind throw two component\npager.$bind(pager2, 'total');   // \n// or just\npager.$bind(pager2, {\"current\": \"current\", \"total\": \"total\"}) \n```","line":" /home/code/regular/blog/tmp/regular/src/Regular.js:238"},{"message":"Missing item type\nunbind one component( see $bind also)\n\nunbind will unbind all relation between two component","line":" /home/code/regular/blog/tmp/regular/src/Regular.js:280"},{"message":"Missing item type\nclone","line":" /home/code/regular/blog/tmp/regular/src/util.js:193"},{"message":"Missing item type\nAnimation Plugin","line":" /home/code/regular/blog/tmp/regular/src/directive/animation.js:18"},{"message":"Missing item type\nevent directive  bundle","line":" /home/code/regular/blog/tmp/regular/src/directive/event.js:1"},{"message":"Missing item type\n- $('dx').delegate()","line":" /home/code/regular/blog/tmp/regular/src/directive/event.js:32"},{"message":"Missing item type\ninject node with animation","line":" /home/code/regular/blog/tmp/regular/src/helper/animate.js:39"},{"message":"Missing item type\nremove node with animation","line":" /home/code/regular/blog/tmp/regular/src/helper/animate.js:84"},{"message":"Missing item type\nget maxtimeout","line":" /home/code/regular/blog/tmp/regular/src/helper/animate.js:183"},{"message":"Missing item type\nthe whole digest loop ,just like angular, it just a dirty-check loop;","line":" /home/code/regular/blog/tmp/regular/src/helper/watcher.js:69"},{"message":"Missing item type\n**tips**: whatever param you passed in $update, after the function called, dirty-check(digest) phase will enter;","line":" /home/code/regular/blog/tmp/regular/src/helper/watcher.js:165"},{"message":"Missing item type\nTimeout Module","line":" /home/code/regular/blog/tmp/regular/src/module/timeout.js:3"},{"message":"Missing item type\njust like setTimeout, but will enter digest automately","line":" /home/code/regular/blog/tmp/regular/src/module/timeout.js:10"},{"message":"Missing item type\njust like setInterval, but will enter digest automately","line":" /home/code/regular/blog/tmp/regular/src/module/timeout.js:23"},{"message":"Missing item type\n进入某种状态","line":" /home/code/regular/blog/tmp/regular/src/parser/Lexer.js:88"},{"message":"Missing item type\n退出","line":" /home/code/regular/blog/tmp/regular/src/parser/Lexer.js:99"},{"message":"Missing item type\n退出某种状态","line":" /home/code/regular/blog/tmp/regular/src/parser/Lexer.js:109"},{"message":"Missing item type\nbuild the mode 1 and mode 2‘s tokenizer","line":" /home/code/regular/blog/tmp/regular/src/parser/Lexer.js:176"},{"message":"Missing item type","line":" /home/code/regular/blog/tmp/regular/src/parser/Parser.js:547"}]}